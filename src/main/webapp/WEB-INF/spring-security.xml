<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/admin*" 	access="hasRole('ROLE_ADMIN')" />
		<security:access-denied-handler error-page="/denied" />
		<security:intercept-url pattern="/register"	access="permitAll" />
		<security:intercept-url pattern="/login" access="permitAll" />
		<security:intercept-url pattern="/resources/**"	access="permitAll" />
		<security:intercept-url pattern="/**" access="isAuthenticated()" />
<!-- 		<security:custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" /> -->
<!-- 		<security:custom-filter position="LOGOUT_FILTER" ref="logoutFilter" /> -->
		<security:logout logout-success-url="/logout" />
		<security:form-login  login-processing-url="/login" login-page="/register" />
	</security:http>

	<bean id="logoutFilter"
		class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<constructor-arg ref="securityContextLogoutHandler" />
		<constructor-arg ref="simpleUrlLogoutSuccessHandler" />
	</bean>

	<bean id="securityContextLogoutHandler"
		class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />

	<bean id="simpleUrlLogoutSuccessHandler"
		class="org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler"
		p:defaultTargetUrl="/home" />

	<bean id="authenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<constructor-arg value="/register" />
	</bean>

	<bean id="customAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler"
		p:defaultTargetUrl="/home" />

	<bean id="customAuthenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"
		p:defaultFailureUrl="/denied" />

	<bean id="authenticationFilter"
		class="com.acme.doktorics.filter.SpecialUserNamePasswordAuthFilter"
		p:sessionAuthenticationStrategy-ref="sas" p:authenticationManager-ref="authenticationManager"
		p:authenticationFailureHandler-ref="customAuthenticationFailureHandler"
		p:authenticationSuccessHandler-ref="customAuthenticationSuccessHandler" />

	<bean id="concurrencyFilter"
		class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<constructor-arg ref="sessionRegistry"></constructor-arg>
	</bean>

	<bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />

	<bean id="sas"
		class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy"
		p:maximumSessions="1" p:exceptionIfMaximumExceeded="true">
		<constructor-arg name="sessionRegistry" ref="sessionRegistry" />
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/securitysample" />
		<property name="username" value="root" />
		<property name="password" value="" />
	</bean>


	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="
				select name,password, location, age 
				from users where name=?"
				authorities-by-username-query="
				SELECT name, userRight  FROM users INNER JOIN user_userright 
				WHERE name = ?  " />
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
